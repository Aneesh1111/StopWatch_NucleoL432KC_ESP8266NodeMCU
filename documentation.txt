-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
IMPORTANT NOTES:

- Follow firmware standard from "the art of designing embedded systems"
- 
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
23/10/2024:
- simplified project by only making a stopwatch with wires as buttons and console as display.

problem - initial way didn't work, was too slow (seconds were much slower than they should be)

solution for next time - implement timers such that they trigger an update of the numbers (ms for example) when they reach a certain number?

-----------------------------------------------------------------------------------
24/10/2024:
- made the counting work using the trigger timer solution

next step - implement triggers for three pins: start/stop and reset

-----------------------------------------------------------------------------------
30/10/2024:
- added stopwatch functionality (start/stop/reset):
	- PA3 = reset (EXTI - pull-down resistor 10k)
	- PA4 = start/stop (EXTI - pull-down resistor 30k)
	- to trigger, apply 3V source to the input
	
next step - implement functional saftey (then you can work on LCD)

-----------------------------------------------------------------------------------
16/11/2024:

- tried to add watchdog timer - didn't work yet. Need to debug :(

- used (https://controllerstech.com/wp-content/uploads/2020/07/iwdg_3.avif) to calculate the window time (min-max time in ms) (max=193.536ms, min=98.304ms)

-----------------------------------------------------------------------------------
18/11/2024:

- original code worked - tried watchdog without pre-thing enabled (so only one number is checked, no window)

-----------------------------------------------------------------------------------
23/11/2024:

- WWDG  works *had to comment out the other tasks that wern't doing anything) and changed the osDelay for the watchdog feed from 1ms to 900 ms. (which falls in the window of the watchdog (~800ms - ~1040ms)

- next todo: make a check that each tasks runs properly (should complete a task very so often for example: complete 1 task every 1 second) and if it doesn't the watchdog should not get fed.

-----------------------------------------------------------------------------------
25/11/2024:

- cleaned up code (not using int but uint32_t for example - because STM32 is 32 bytes so compiler will probably optimize to uint32_t anyway - quicker to look up)

- later on, add a IWDG as well as this uses an independent timer, first make WWDG give debug information about what went wrong
- also clean up code so no more global variables :D

-----------------------------------------------------------------------------------

